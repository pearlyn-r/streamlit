To use the IDs of issuers with top delta as input for filtering, you can wrap your current query inside a Common Table Expression (CTE) or a subquery, and then filter on that delta.

Here's how to do it step by step:


---

✅ Step 1: Use your current query as a CTE

Name it full_data, and then pick only the top issuers based on issuer-level delta (not per product).


---

✅ Final Modified Query (With Filtering for Top Issuers)

WITH today AS (
  SELECT
    name,
    id,
    product,
    SUM(contribution) OVER (PARTITION BY name, id) AS contribution_today,
    MAX(CASE WHEN tier IN ('x', 'f') THEN 'a' ELSE 'b' END) OVER (PARTITION BY name, id) AS rating_today,
    MAX(CASE WHEN industry IN ('x', 'f') THEN 'a' ELSE 'b' END) OVER (PARTITION BY name, id) AS industry_today
  FROM your_table
  WHERE date = CURRENT_DATE
),

yesterday AS (
  SELECT
    name,
    id,
    MAX(CASE WHEN tier IN ('x', 'f') THEN 'a' ELSE 'b' END) AS rating_yesterday,
    MAX(CASE WHEN industry IN ('x', 'f') THEN 'a' ELSE 'b' END) AS industry_yesterday,
    SUM(contribution) AS contribution_yesterday
  FROM your_table
  WHERE date = CURRENT_DATE - INTERVAL 1 DAY
  GROUP BY name, id
),

full_data AS (
  SELECT
    DISTINCT t.name,
    t.id,
    t.product,
    t.contribution_today AS date,
    COALESCE(y.contribution_yesterday, 0) AS previous_date,
    t.contribution_today - COALESCE(y.contribution_yesterday, 0) AS delta,
    ROUND(
      100.0 * (t.contribution_today - COALESCE(y.contribution_yesterday, 0)) /
      NULLIF(COALESCE(y.contribution_yesterday, 0), 0),
      2
    ) AS percent_change,
    t.rating_today AS rating,
    y.rating_yesterday AS rating_prev,
    t.industry_today AS industry,
    y.industry_yesterday AS industry_prev
  FROM today t
  LEFT JOIN yesterday y
    ON t.name = y.name AND t.id = y.id
),

top_issuers AS (
  SELECT id
  FROM full_data
  GROUP BY id
  ORDER BY SUM(delta) DESC
  LIMIT 10  -- you can change this number to however many top issuers you want
)

SELECT *
FROM full_data
WHERE id IN (SELECT id FROM top_issuers)
ORDER BY delta DESC;


---

✅ What This Does:

full_data: your full per-product, per-issuer data with all columns

top_issuers: finds top N issuer ids by issuer-level total delta

Final query: filters full_data to only include rows for those top issuer IDs



---

Would you like to also group and display issuer-level totals separately above each group of products? Let me know!

