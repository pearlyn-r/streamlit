def extract_mapping_from_xlwings_sheet(wb, sheet_name='Mapping'):
    try:
        ws = wb.sheets[sheet_name]
        mapping = {}

        data = ws.range("A2").expand('down').value
        for row in data:
            key = str(row[0]).strip() if row[0] else None
            comment = str(row[1]).strip() if len(row) > 1 and row[1] else ""
            if key:
                mapping[key] = comment

        print(f"✅ Loaded {len(mapping)} mapping entries from '{sheet_name}'.")
        return mapping
    except Exception as e:
        print(f"❌ Failed to extract mapping from xlwings: {e}")
        return {}
def apply_mapping_to_excel_pivot_xlwings(file_path, mapping_sheet='Mapping', pivot_sheet='Pivot'):
    try:
        import xlwings as xw
        app = xw.App(visible=False)
        wb = app.books.open(file_path)

        # Refresh all pivots
        wb.api.RefreshAll()

        # ✅ Extract mapping using xlwings-compatible reader
        mapping = extract_mapping_from_xlwings_sheet(wb, mapping_sheet)

        ws_pivot = wb.sheets[pivot_sheet]

        # Apply mapping from row 5 downwards
        row = 5
        while True:
            key_cell = ws_pivot.range(f"A{row}").value
            if not key_cell:
                break
            cleaned_key = str(key_cell).strip()
            comment = mapping.get(cleaned_key, "Under investigation for now — reason not determined")
            ws_pivot.range(f"E{row}").value = comment
            print(f"Row {row}: {cleaned_key} → {comment}")
            row += 1

        wb.save()
        wb.close()
        app.quit()
        print(f"\n✅ Mapping completed and saved in: {file_path}")
    except Exception as e:
        print(f"❌ xlwings mapping failed: {e}")
