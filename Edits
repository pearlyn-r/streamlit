import os
import xlwings as xw
import time

def extract_mapping_from_xlwings_sheet(wb, sheet_name='mapping'):
    try:
        ws = wb.sheets[sheet_name]
        mapping = {}

        data = ws.range("A2").expand('down').value
        for row in data:
            key = str(row[0]).strip() if row[0] else None
            comment = str(row[1]).strip() if len(row) > 1 and row[1] else ""
            if key:
                mapping[key] = comment

        print(f"‚úÖ Loaded {len(mapping)} mappings from '{sheet_name}'")
        return mapping
    except Exception as e:
        print(f"‚ùå Failed to load mapping: {e}")
        return {}

def process_excel_file(filepath, pivot_sheet='Sheet2', mapping_sheet='mapping'):
    try:
        app = xw.App(visible=True)
        wb = app.books.open(filepath)
        print(f"\nüìÑ Opened: {filepath}")

        time.sleep(3)  # wait for Excel to refresh pivot tables
        mapping = extract_mapping_from_xlwings_sheet(wb, mapping_sheet)
        ws = wb.sheets[pivot_sheet]

        mapped = 0
        row = 5
        while True:
            key_cell = ws.range(f"A{row}").value
            if not key_cell:
                break
            key = str(key_cell).strip()
            comment = mapping.get(key, "Under investigation for now ‚Äî reason not determined")
            ws.range(f"E{row}").value = comment
            print(f"Row {row}: {key} ‚Üí {comment}")
            mapped += 1
            row += 1

        wb.save()
        wb.close()
        app.quit()
        print(f"‚úÖ Done: {mapped} comments written to '{filepath}'")

    except Exception as e:
        print(f"‚ùå Error in file {filepath}: {e}")

def process_folder(folder_path):
    for fname in os.listdir(folder_path):
        if fname.lower().startswith("summary_") and fname.lower().endswith(".xlsx"):
            full_path = os.path.join(folder_path, fname)
            process_excel_file(full_path)

if __name__ == "__main__":
    folder = input("üìÅ Enter path to summary_output folder: ").strip()
    if os.path.exists(folder):
        process_folder(folder)
    else:
        print("‚ùå Folder does not exist.")
