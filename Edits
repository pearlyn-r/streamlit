WITH base_today AS (
  SELECT
    name,
    id,
    product,
    contribution,
    CASE WHEN tier IN ('x', 'f') THEN 'a' ELSE 'b' END AS rating,
    CASE WHEN industry IN ('x', 'f') THEN 'a' ELSE 'b' END AS industry,
    ROW_NUMBER() OVER (PARTITION BY name, id ORDER BY product) AS rn
  FROM your_table
  WHERE date = CURRENT_DATE
),
base_yesterday AS (
  SELECT
    name,
    id,
    contribution,
    CASE WHEN tier IN ('x', 'f') THEN 'a' ELSE 'b' END AS rating,
    CASE WHEN industry IN ('x', 'f') THEN 'a' ELSE 'b' END AS industry
  FROM your_table
  WHERE date = CURRENT_DATE - INTERVAL 1 DAY
),
agg_today AS (
  SELECT
    name,
    id,
    SUM(contribution) AS contribution_today,
    MAX(rating) AS rating_today,
    MAX(industry) AS industry_today,
    MIN(CASE WHEN rn = 1 THEN product END) AS sample_product
  FROM base_today
  GROUP BY name, id
),
agg_yesterday AS (
  SELECT
    name,
    id,
    SUM(contribution) AS contribution_yesterday,
    MAX(rating) AS rating_yesterday,
    MAX(industry) AS industry_yesterday
  FROM base_yesterday
  GROUP BY name, id
)
SELECT
  COALESCE(t.name, y.name) AS name,
  COALESCE(t.id, y.id) AS id,
  t.sample_product AS product,
  COALESCE(t.contribution_today, 0) AS date,
  COALESCE(y.contribution_yesterday, 0) AS previous_date,
  COALESCE(t.contribution_today, 0) - COALESCE(y.contribution_yesterday, 0) AS delta,
  ROUND(
    100.0 * (
      COALESCE(t.contribution_today, 0) - COALESCE(y.contribution_yesterday, 0)
    ) / NULLIF(COALESCE(y.contribution_yesterday, 0), 0),
    2
  ) AS percent_change,
  t.rating_today AS rating,
  y.rating_yesterday AS rating_prev,
  t.industry_today AS industry,
  y.industry_yesterday AS industry_prev
FROM agg_today t
FULL OUTER JOIN agg_yesterday y
  ON t.name = y.name AND t.id = y.id
ORDER BY delta DESC;
